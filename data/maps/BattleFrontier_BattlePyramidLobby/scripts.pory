mapscripts BattleFrontier_BattlePyramidLobby_MapScripts {
    BattleFrontier_BattlePyramidLobby_OnFrame
    BattleFrontier_BattleDomeLobby_OnWarp
    @ Unused. Pyramid uses Dome's OnWarp (presumably by mistake). Their effects are identical
}

script BattleFrontier_BattlePyramidLobby_EventScript_GetChallengeStatus {
	frontier_getstatus
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_QuitWithoutSaving {
	lockall
	message BattleFrontier_BattlePyramidLobby_Text_DidntSaveBeforeQuittingTakeBag
	waitmessage
	playse SE_EXP_MAX
	waitse
	closemessage
	pyramid_set PYRAMID_DATA_WIN_STREAK, 0
	pyramid_set PYRAMID_DATA_WIN_STREAK_ACTIVE, FALSE
	frontier_set FRONTIER_DATA_CHALLENGE_STATUS, 0
	setvar VAR_TEMP_CHALLENGE_STATUS, 255
	releaseall
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_WonChallenge {
	lockall
	frontier_isbrain
	goto_if_eq VAR_RESULT, TRUE, BattleFrontier_BattlePyramidLobby_EventScript_DefeatedKing
	msgbox BattleFrontier_BattlePyramidLobby_Text_YouveConqueredPyramid, MSGBOX_DEFAULT
	goto BattleFrontier_BattlePyramidLobby_EventScript_GiveBattlePoints

}

script BattleFrontier_BattlePyramidLobby_EventScript_DefeatedKing {
	msgbox BattleFrontier_BattlePyramidLobby_Text_YouveDefeatedPyramidKing, MSGBOX_DEFAULT
}

script BattleFrontier_BattlePyramidLobby_EventScript_GiveBattlePoints {
	special DoBattlePyramidMonsHaveHeldItem
	call_if_eq VAR_RESULT, TRUE, BattleFrontier_BattlePyramidLobby_EventScript_StoreHeldItemsInPyramidBag
	clearflag FLAG_STORING_ITEMS_IN_PYRAMID_BAG
	frontier_checkairshow
	special LoadPlayerParty
	pyramid_clearhelditems
	special HealPlayerParty
	callnative UpdateFollowingPokemon
	message BattleFrontier_BattlePyramidLobby_Text_UsedBattleBagWillBeKept
	waitmessage
	playse SE_EXP_MAX
	waitse
	msgbox BattleFrontier_BattlePyramidLobby_Text_GiveYouTheseBattlePoints, MSGBOX_DEFAULT
	frontier_givepoints
	msgbox BattleFrontier_Text_ObtainedXBattlePoints, MSGBOX_GETPOINTS
	message BattleFrontier_BattlePyramidLobby_Text_RecordResultsWait
	waitmessage
	pyramid_setprize
	pyramid_save 0
	playse SE_SAVE
	waitse
	msgbox BattleFrontier_BattlePyramidLobby_Text_LookForwardToNextChallenge, MSGBOX_DEFAULT
	closemessage
	setvar VAR_TEMP_CHALLENGE_STATUS, 255
	releaseall
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_LostChallenge {
	frontier_checkairshow
	special LoadPlayerParty
	pyramid_clearhelditems
	special HealPlayerParty
	callnative UpdateFollowingPokemon
	lockall
	message BattleFrontier_BattlePyramidLobby_Text_DisappointingHereIsBag
	waitmessage
	playse SE_EXP_MAX
	waitse
	message BattleFrontier_BattlePyramidLobby_Text_RecordResultsWait
	waitmessage
	pyramid_set PYRAMID_DATA_WIN_STREAK_ACTIVE, FALSE
	pyramid_save 0
	playse SE_SAVE
	waitse
	msgbox BattleFrontier_BattlePyramidLobby_Text_LookForwardToNextChallenge, MSGBOX_DEFAULT
	closemessage
	setvar VAR_TEMP_CHALLENGE_STATUS, 255
	releaseall
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_ResumeChallenge {
	goto BattleFrontier_BattlePyramidLobby_EventScript_EnterChallenge

}

script BattleFrontier_BattlePyramidLobby_EventScript_Attendant {
	lock
	faceplayer
	setvar VAR_FRONTIER_FACILITY, FRONTIER_FACILITY_PYRAMID
	setvar VAR_FRONTIER_BATTLE_MODE, FRONTIER_MODE_SINGLES
	special SavePlayerParty
	msgbox BattleFrontier_BattlePyramidLobby_Text_WelcomeToBattlePyramid, MSGBOX_DEFAULT
}

script BattleFrontier_BattlePyramidLobby_EventScript_AskTakeChallenge {
	message BattleFrontier_BattlePyramidLobby_Text_EmbarkOnChallenge
	waitmessage
	multichoice 17, 6, MULTI_CHALLENGEINFO, FALSE
	switch VAR_RESULT
	case 0, BattleFrontier_BattlePyramidLobby_EventScript_TryEnterChallenge
	case 1, BattleFrontier_BattlePyramidLobby_EventScript_ExplainChallenge
	case 2, BattleFrontier_BattlePyramidLobby_EventScript_CancelChallenge
	case MULTI_B_PRESSED, BattleFrontier_BattlePyramidLobby_EventScript_CancelChallenge

}

script BattleFrontier_BattlePyramidLobby_EventScript_TryEnterChallenge {
	message BattleFrontier_BattlePyramidLobby_Text_WhichLevelMode
	waitmessage
	multichoice 17, 6, MULTI_LEVEL_MODE, FALSE
	switch VAR_RESULT
	case FRONTIER_LVL_TENT, BattleFrontier_BattlePyramidLobby_EventScript_CancelChallenge
	case MULTI_B_PRESSED, BattleFrontier_BattlePyramidLobby_EventScript_CancelChallenge
	frontier_checkineligible
	goto_if_eq VAR_0x8004, TRUE, BattleFrontier_BattlePyramidLobby_EventScript_NotEnoughValidMons
	frontier_set FRONTIER_DATA_LVL_MODE, VAR_RESULT
	msgbox BattleFrontier_BattlePyramidLobby_Text_SelectThreeMons, MSGBOX_DEFAULT
	fadescreen FADE_TO_BLACK
	callnative RemoveFollowingPokemon
	call BattleFrontier_EventScript_GetLvlMode
	copyvar VAR_0x8004, VAR_RESULT
	setvar VAR_0x8005, FRONTIER_PARTY_SIZE
	special ChoosePartyForBattleFrontier
	waitstate
	goto_if_eq VAR_RESULT, 0, BattleFrontier_BattlePyramidLobby_EventScript_LoadPartyAndCancelChallenge
	msgbox BattleFrontier_BattlePyramidLobby_Text_OkayToSaveBeforeChallenge, MSGBOX_YESNO
	switch VAR_RESULT
	case NO, BattleFrontier_BattlePyramidLobby_EventScript_LoadPartyAndCancelChallenge
	case YES, BattleFrontier_BattlePyramidLobby_EventScript_SaveBeforeChallenge
	case MULTI_B_PRESSED, BattleFrontier_BattlePyramidLobby_EventScript_LoadPartyAndCancelChallenge

}

script BattleFrontier_BattlePyramidLobby_EventScript_SaveBeforeChallenge {
	setvar VAR_TEMP_CHALLENGE_STATUS, 0
	frontier_set FRONTIER_DATA_SELECTED_MON_ORDER
	pyramid_init
	pyramid_set PYRAMID_DATA_WIN_STREAK_ACTIVE, TRUE
	frontier_set FRONTIER_DATA_CHALLENGE_STATUS, CHALLENGE_STATUS_SAVING
	frontier_set FRONTIER_DATA_PAUSED, FALSE
	pyramid_seedfloor
	pyramid_settrainers
	special LoadPlayerParty
	closemessage
	delay 2
	call Common_EventScript_SaveGame
	setvar VAR_TEMP_CHALLENGE_STATUS, 255
	goto_if_eq VAR_RESULT, 0, BattleFrontier_BattlePyramidLobby_EventScript_CancelChallengeSaveFailed
}

script BattleFrontier_BattlePyramidLobby_EventScript_EnterChallenge {
	special SavePlayerParty
	frontier_setpartyorder FRONTIER_PARTY_SIZE
	msgbox BattleFrontier_BattlePyramidLobby_Text_ShowYouIntoPyramid, MSGBOX_DEFAULT
	closemessage
	call BattleFrontier_BattlePyramidLobby_EventScript_WalkToPanelAndReceiveBag
	frontier_set FRONTIER_DATA_CHALLENGE_STATUS, 0
	setvar VAR_RESULT, 0
	special HealPlayerParty
	warp MAP_BATTLE_FRONTIER_BATTLE_PYRAMID_FLOOR, 1, 1
	setvar VAR_TEMP_CHALLENGE_STATUS, 0
	waitstate
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_ExplainChallenge {
	msgbox BattleFrontier_BattlePyramidLobby_Text_ExplainBattlePyramid, MSGBOX_DEFAULT
	goto BattleFrontier_BattlePyramidLobby_EventScript_AskTakeChallenge

}

script BattleFrontier_BattlePyramidLobby_EventScript_NotEnoughValidMons {
	switch VAR_RESULT
	case FRONTIER_LVL_50, BattleFrontier_BattlePyramidLobby_EventScript_NotEnoughValidMonsLv50
	case FRONTIER_LVL_OPEN, BattleFrontier_BattlePyramidLobby_EventScript_NotEnoughValidMonsLvOpen

}

script BattleFrontier_BattlePyramidLobby_EventScript_NotEnoughValidMonsLv50 {
	msgbox BattleFrontier_BattlePyramidLobby_Text_NotEnoughValidMonsLv50, MSGBOX_DEFAULT
	goto BattleFrontier_BattlePyramidLobby_EventScript_EndCancelChallenge

}

script BattleFrontier_BattlePyramidLobby_EventScript_NotEnoughValidMonsLvOpen {
	msgbox BattleFrontier_BattlePyramidLobby_Text_NotEnoughValidMonsLvOpen, MSGBOX_DEFAULT
	goto BattleFrontier_BattlePyramidLobby_EventScript_EndCancelChallenge

}

script BattleFrontier_BattlePyramidLobby_EventScript_CancelChallengeSaveFailed {
	frontier_set FRONTIER_DATA_CHALLENGE_STATUS, 0
	goto BattleFrontier_BattlePyramidLobby_EventScript_CancelChallenge

}

script BattleFrontier_BattlePyramidLobby_EventScript_LoadPartyAndCancelChallenge {
	special LoadPlayerParty
	callnative UpdateFollowingPokemon
}

script BattleFrontier_BattlePyramidLobby_EventScript_CancelChallenge {
	msgbox BattleFrontier_BattlePyramidLobby_Text_AwaitFutureChallenge, MSGBOX_DEFAULT
}

script BattleFrontier_BattlePyramidLobby_EventScript_EndCancelChallenge {
	release
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintGiver {
	lockall
	applymovement LOCALID_PYRAMID_LOBBY_HINT_GIVER, Common_Movement_FacePlayer
	waitmovement 0
	msgbox BattleFrontier_BattlePyramidLobby_Text_TellYouWhatMisfortunesAwait, MSGBOX_DEFAULT
	call BattleFrontier_BattlePyramidLobby_EventScript_GiveHint
	msgbox BattleFrontier_BattlePyramidLobby_Text_BelieveMyFortunesOrNot, MSGBOX_DEFAULT
	releaseall
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_GiveHint {
	multichoice 17, 6, MULTI_LEVEL_MODE, FALSE
	switch VAR_RESULT
	case FRONTIER_LVL_50, BattleFrontier_BattlePyramidLobby_EventScript_GiveHintLv50
	case FRONTIER_LVL_OPEN, BattleFrontier_BattlePyramidLobby_EventScript_GiveHintLvOpen
	case FRONTIER_LVL_TENT, BattleFrontier_BattlePyramidLobby_EventScript_NoHint
	case MULTI_B_PRESSED, BattleFrontier_BattlePyramidLobby_EventScript_NoHint
	return

@ Shouldnt occur
}

script BattleFrontier_BattlePyramidLobby_EventScript_NoHint {
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_GiveHintLv50 {
	msgbox BattleFrontier_BattlePyramidLobby_Text_Aah, MSGBOX_DEFAULT
	pyramid_get PYRAMID_DATA_WIN_STREAK_ACTIVE_50
	goto_if_ne VAR_RESULT, FALSE, BattleFrontier_BattlePyramidLobby_EventScript_GiveHintGetLv50Streak
	setvar VAR_RESULT, 0
	goto BattleFrontier_BattlePyramidLobby_EventScript_DoHintComment
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_GiveHintGetLv50Streak {
	pyramid_get PYRAMID_DATA_WIN_STREAK_50
	goto BattleFrontier_BattlePyramidLobby_EventScript_DoHintComment
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_GiveHintLvOpen {
	msgbox BattleFrontier_BattlePyramidLobby_Text_Aah, MSGBOX_DEFAULT
	pyramid_get PYRAMID_DATA_WIN_STREAK_ACTIVE_OPEN
	goto_if_ne VAR_RESULT, FALSE, BattleFrontier_BattlePyramidLobby_EventScript_GiveHintGetLvOpenStreak
	setvar VAR_RESULT, 0
	goto BattleFrontier_BattlePyramidLobby_EventScript_DoHintComment
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_GiveHintGetLvOpenStreak {
	pyramid_get PYRAMID_DATA_WIN_STREAK_OPEN
	goto BattleFrontier_BattlePyramidLobby_EventScript_DoHintComment
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_DoHintComment {
	copyvar VAR_0x8004, VAR_RESULT
	special GetBattlePyramidHint
	switch VAR_RESULT
	case 0, BattleFrontier_BattlePyramidLobby_EventScript_HintParalysis
	case 1, BattleFrontier_BattlePyramidLobby_EventScript_HintPoison
	case 2, BattleFrontier_BattlePyramidLobby_EventScript_HintBurn
	case 3, BattleFrontier_BattlePyramidLobby_EventScript_HintPPWaste
	case 4, BattleFrontier_BattlePyramidLobby_EventScript_HintLevitate
	case 5, BattleFrontier_BattlePyramidLobby_EventScript_HintTrapAbility
	case 6, BattleFrontier_BattlePyramidLobby_EventScript_HintIce
	case 7, BattleFrontier_BattlePyramidLobby_EventScript_HintExplosion
	case 8, BattleFrontier_BattlePyramidLobby_EventScript_HintPsychic
	case 9, BattleFrontier_BattlePyramidLobby_EventScript_HintRock
	case 10, BattleFrontier_BattlePyramidLobby_EventScript_HintFighting
	case 11, BattleFrontier_BattlePyramidLobby_EventScript_HintWeather
	case 12, BattleFrontier_BattlePyramidLobby_EventScript_HintBug
	case 13, BattleFrontier_BattlePyramidLobby_EventScript_HintDark
	case 14, BattleFrontier_BattlePyramidLobby_EventScript_HintWater
	case 15, BattleFrontier_BattlePyramidLobby_EventScript_HintGhost
	case 16, BattleFrontier_BattlePyramidLobby_EventScript_HintSteel
	case 17, BattleFrontier_BattlePyramidLobby_EventScript_HintFlyingDragon
	case 18, BattleFrontier_BattlePyramidLobby_EventScript_HintStoneEvolve
	case 19, BattleFrontier_BattlePyramidLobby_EventScript_HintNormal
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintParalysis {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintParalysis, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintPoison {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintPoison, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintBurn {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintBurn, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintPPWaste {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintPPWaste, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintLevitate {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintLevitate, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintTrapAbility {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintTrapAbility, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintIce {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintIce, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintExplosion {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintExplosion, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintPsychic {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintPsychic, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintRock {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintRock, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintFighting {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintFighting, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintWeather {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintWeather, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintBug {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintBug, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintDark {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintDark, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintWater {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintWater, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintGhost {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintGhost, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintSteel {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintSteel, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintFlyingDragon {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintFlyingDragon, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintStoneEvolve {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintStoneEvolve, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_HintNormal {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HintNormal, MSGBOX_DEFAULT
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_ShowResults {
	lockall
	frontier_results FRONTIER_FACILITY_PYRAMID
	waitbuttonpress
	special RemoveRecordsWindow
	releaseall
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_WalkToPanelAndReceiveBag {
	applymovement LOCALID_PYRAMID_LOBBY_ATTENDANT, BattleFrontier_BattlePyramidLobby_Movement_AttendantWalkToPanel
	applymovement LOCALID_PLAYER, BattleFrontier_BattlePyramidLobby_Movement_PlayerWalkToPanel
	waitmovement 0
	msgbox BattleFrontier_BattlePyramidLobby_Text_WeWillHoldBagForSafekeeping, MSGBOX_DEFAULT
	pyramid_get PYRAMID_DATA_WIN_STREAK
	goto_if_eq VAR_RESULT, 0, BattleFrontier_BattlePyramidLobby_EventScript_ReceiveNewBattleBag
	msgbox BattleFrontier_BattlePyramidLobby_Text_PleaseTakePreviousBattleBag, MSGBOX_DEFAULT
	goto BattleFrontier_BattlePyramidLobby_EventScript_ReceiveBattleBag

}

script BattleFrontier_BattlePyramidLobby_EventScript_ReceiveNewBattleBag {
	msgbox BattleFrontier_BattlePyramidLobby_Text_PleaseTakeThisBattleBag, MSGBOX_DEFAULT
}

script BattleFrontier_BattlePyramidLobby_EventScript_ReceiveBattleBag {
	message BattleFrontier_BattlePyramidLobby_Text_ExchangedBagForBattleBag
	waitmessage
	playse SE_EXP_MAX
	waitse
	msgbox BattleFrontier_BattlePyramidLobby_Text_StepOnFloorPanel, MSGBOX_DEFAULT
	closemessage
	applymovement LOCALID_PYRAMID_LOBBY_ATTENDANT, BattleFrontier_BattlePyramidLobby_Movement_AttendantMoveAside
	waitmovement 0
	applymovement LOCALID_PLAYER, BattleFrontier_BattlePyramidLobby_Movement_PlayerStepOnPanel
	waitmovement 0
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_StoreHeldItemsInPyramidBag {
	msgbox BattleFrontier_BattlePyramidLobby_Text_MonHoldingItemCannotTake, MSGBOX_DEFAULT
	setflag FLAG_STORING_ITEMS_IN_PYRAMID_BAG
	special TryStoreHeldItemsInPyramidBag
	goto_if_eq VAR_RESULT, 0, BattleFrontier_BattlePyramidLobby_EventScript_HeldItemsStoredInPyramidBag
	message BattleFrontier_BattlePyramidLobby_Text_BagCannotHoldPickItemsToKeep
	waitmessage
	goto BattleFrontier_BattlePyramidLobby_EventScript_PickItemsToKeep
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_HeldItemsStoredInPyramidBag {
	msgbox BattleFrontier_BattlePyramidLobby_Text_HeldItemsMovedToBag, MSGBOX_DEFAULT
	return

@ When exiting Battle Pyramid with a full pyramid bag and held items the player must select to keep/toss party held items and make room for any kept items by tossing from the pyramid bag
}

script BattleFrontier_BattlePyramidLobby_EventScript_PickItemsToKeep {
	multichoice 17, 6, MULTI_FRONTIER_ITEM_CHOOSE, FALSE
	switch VAR_RESULT
	case 0, BattleFrontier_BattlePyramidLobby_EventScript_PickItemsFromBag
	case 1, BattleFrontier_BattlePyramidLobby_EventScript_PickItemsFromParty
	case 2, BattleFrontier_BattlePyramidLobby_EventScript_ExitPickItems
	case MULTI_B_PRESSED, BattleFrontier_BattlePyramidLobby_EventScript_ExitPickItems
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_PickItemsFromBag {
	special ChooseItemsToTossFromPyramidBag
	waitstate
	message BattleFrontier_BattlePyramidLobby_Text_PickItemsToKeep
	waitmessage
	goto BattleFrontier_BattlePyramidLobby_EventScript_PickItemsToKeep
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_PickItemsFromParty {
	special BattlePyramidChooseMonHeldItems
	waitstate
	message BattleFrontier_BattlePyramidLobby_Text_PickItemsToKeep
	waitmessage
	goto BattleFrontier_BattlePyramidLobby_EventScript_PickItemsToKeep
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_ExitPickItems {
	special DoBattlePyramidMonsHaveHeldItem
	goto_if_eq VAR_RESULT, TRUE, BattleFrontier_BattlePyramidLobby_EventScript_PartyStillHasHeldItems
	return

}

script BattleFrontier_BattlePyramidLobby_EventScript_PartyStillHasHeldItems {
	msgbox BattleFrontier_BattlePyramidLobby_Text_LeastOneMonHoldingItem, MSGBOX_DEFAULT
	message BattleFrontier_BattlePyramidLobby_Text_PickItemsToKeep
	waitmessage
	goto BattleFrontier_BattlePyramidLobby_EventScript_PickItemsToKeep
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_Woman {
	msgbox BattleFrontier_BattlePyramidLobby_Text_TrainersNoticeRunning, MSGBOX_NPC
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_FatMan {
	msgbox BattleFrontier_BattlePyramidLobby_Text_LostLotOfItems, MSGBOX_NPC
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_RulesBoard {
	lockall
	msgbox BattleFrontier_BattlePyramidLobby_Text_RulesAreListed, MSGBOX_DEFAULT
	goto BattleFrontier_BattlePyramidLobby_EventScript_ReadRulesBoard
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_ReadRulesBoard {
	message BattleFrontier_BattlePyramidLobby_Text_ReadWhichHeading
	waitmessage
	multichoice 15, 2, MULTI_BATTLE_PYRAMID_RULES, FALSE
	switch VAR_RESULT
	case 0, BattleFrontier_BattlePyramidLobby_EventScript_RulesPokemon
	case 1, BattleFrontier_BattlePyramidLobby_EventScript_RulesTrainers
	case 2, BattleFrontier_BattlePyramidLobby_EventScript_RulesMaze
	case 3, BattleFrontier_BattlePyramidLobby_EventScript_RulesBag
	case 4, BattleFrontier_BattlePyramidLobby_EventScript_ExitRules
	case MULTI_B_PRESSED, BattleFrontier_BattlePyramidLobby_EventScript_ExitRules
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_RulesPokemon {
	msgbox BattleFrontier_BattlePyramidLobby_Text_ExplainMonRules, MSGBOX_DEFAULT
	goto BattleFrontier_BattlePyramidLobby_EventScript_ReadRulesBoard
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_RulesTrainers {
	msgbox BattleFrontier_BattlePyramidLobby_Text_ExplainTrainerRules, MSGBOX_DEFAULT
	goto BattleFrontier_BattlePyramidLobby_EventScript_ReadRulesBoard
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_RulesMaze {
	msgbox BattleFrontier_BattlePyramidLobby_Text_ExplainMazeRules, MSGBOX_DEFAULT
	goto BattleFrontier_BattlePyramidLobby_EventScript_ReadRulesBoard
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_RulesBag {
	msgbox BattleFrontier_BattlePyramidLobby_Text_ExplainBagRules, MSGBOX_DEFAULT
	goto BattleFrontier_BattlePyramidLobby_EventScript_ReadRulesBoard
	end

}

script BattleFrontier_BattlePyramidLobby_EventScript_ExitRules {
	releaseall
	end

}

text BattleFrontier_BattlePyramidLobby_Text_WelcomeToBattlePyramid {
    format("Where the courage of TRAINERS is put to the test!\p Welcome to the BATTLE PYRAMID!\p I am your guide to the Battle Quest.")
}

text BattleFrontier_BattlePyramidLobby_Text_EmbarkOnChallenge {
    format("Have you the courage to embark on the Battle Quest challenge?")
}

text BattleFrontier_BattlePyramidLobby_Text_AwaitFutureChallenge {
    format("We await your challenge in the future!")
}

text BattleFrontier_BattlePyramidLobby_Text_ExplainBattlePyramid {
    format("The Battle Quest is a battling event in which you must explore\l the PYRAMID and try to reach the top.\p In the PYRAMID are seven floors of mazes, all of them filled with not only\l skilled TRAINERS but also wild POKéMON.\p You must enter with three POKéMON, none of them holding an item.\p On your ascent, you will be provided with a BATTLE BAG for items.\p If you fail in your challenge, any item placed in the BATTLE BAG disappears.\p If you want to interrupt your challenge, you must select “REST”\l and save the game.\p If you don't save before interrupting, you will be disqualified.")
}

text BattleFrontier_BattlePyramidLobby_Text_WhichLevelMode {
    format("The PYRAMID offers two courses, Level 50 and Open Level.\l Which will you enter?")
}

text BattleFrontier_BattlePyramidLobby_Text_SelectThreeMons {
    format("Very good. Now, please select the three POKéMON you wish to accompany you.")
}

text BattleFrontier_BattlePyramidLobby_Text_NotEnoughValidMonsLvOpen {
    format("A slight problem, adventurer!\p You seem to not have the three POKéMON qualified for the challenge.\p Please also remember to take all items from your POKéMON.\p EGGS{STR_VAR_1} ineligible.\p When you are ready, please have a word with me.")
}

text BattleFrontier_BattlePyramidLobby_Text_NotEnoughValidMonsLv50 {
    format("A slight problem, adventurer!\p You seem to not have the three POKéMON qualified for the challenge.\p The three POKéMON must be different and each no higher than Level 50.\p Please also remember to take all items from your POKéMON.\p EGGS{STR_VAR_1} ineligible.\p When you are ready, please have a word with me.")
}

text BattleFrontier_BattlePyramidLobby_Text_OkayToSaveBeforeChallenge {
    format("Before you enter the BATTLE PYRAMID, the game must be saved. Is that okay?")
}

text BattleFrontier_BattlePyramidLobby_Text_ShowYouIntoPyramid {
    format("Very good. I will now show you into the BATTLE PYRAMID.")
}

text BattleFrontier_BattlePyramidLobby_Text_WeWillHoldBagForSafekeeping {
    format("We will hold your BAG for safekeeping, {PLAYER}, while you are exploring.")
}

text BattleFrontier_BattlePyramidLobby_Text_PleaseTakePreviousBattleBag {
    format("In exchange, please take this BATTLE BAG, the one you used previously.")
}

text BattleFrontier_BattlePyramidLobby_Text_PleaseTakeThisBattleBag {
    format("In exchange, please take this BATTLE BAG.")
}

text BattleFrontier_BattlePyramidLobby_Text_ExchangedBagForBattleBag {
    format("{PLAYER} exchanged the BAG for the BATTLE BAG.")
}

text BattleFrontier_BattlePyramidLobby_Text_StepOnFloorPanel {
    format("When you step on this floor panel, you will be transported to a higher\l floor in the PYRAMID.\p I hope for your sake that your quest goes safely!")
}

text BattleFrontier_BattlePyramidLobby_Text_DidntSaveBeforeQuittingTakeBag {
    format("A major problem, explorer!\p You did not save before ending your challenge the last time.\p Consequently, your challenge has been disqualified, I'm sorry to say.\p Here is the BAG we've been holding for you.\p {PLAYER} got the BAG back.")
}

text BattleFrontier_BattlePyramidLobby_Text_YouveConqueredPyramid {
    format("Excellent to see you back!\p You've conquered the PYRAMID! How splendid!")
}

text BattleFrontier_BattlePyramidLobby_Text_MonHoldingItemCannotTake {
    format("Ah, a slight problem.\p At least one POKéMON is holding an item.\p I'm sorry to say, items obtained in the PYRAMID cannot be taken away.")
}

text BattleFrontier_BattlePyramidLobby_Text_HeldItemsMovedToBag {
    format("All items held by your POKéMON will be moved to your BATTLE BAG, {PLAYER}.")
}

text BattleFrontier_BattlePyramidLobby_Text_BagCannotHoldPickItemsToKeep {
    format("The BATTLE BAG cannot hold all your items, I'm sorry to say.\p Please pick the items you'll keep in the BATTLE BAG, and with your POKéMON.")
}

text BattleFrontier_BattlePyramidLobby_Text_LeastOneMonHoldingItem {
    format("At least one POKéMON is still holding an item.")
}

text BattleFrontier_BattlePyramidLobby_Text_PickItemsToKeep {
    format("Please pick the items you'll keep in the BATTLE BAG, and with your POKéMON.")
}

text BattleFrontier_BattlePyramidLobby_Text_ReturnedEverythingMonsHeld {
    format("{PLAYER} returned everything that the POKéMON held.")
}

text BattleFrontier_BattlePyramidLobby_Text_UsedBattleBagWillBeKept {
    format("The BATTLE BAG you used will be kept in readiness for your next challenge.\p {PLAYER} turned the BATTLE BAG over for the BAG's return.")
}

text BattleFrontier_BattlePyramidLobby_Text_RecordResultsWait {
    format("I must record your results. Please wait.")
}

text BattleFrontier_BattlePyramidLobby_Text_ForConqueringPyramidTakeThis {
    format("As a memento for conquering the BATTLE PYRAMID, please take this.")
}

text BattleFrontier_BattlePyramidLobby_Text_ReceivedPrizeItem {
    format("{PLAYER} received the prize {STR_VAR_1}. …Ah… Your BAG appears to be filled.\p Please return after you've organized your BAG's contents.")
}

text BattleFrontier_BattlePyramidLobby_Text_DisappointingHereIsBag {
    format("How disappointing for you…\p Here is the BAG we've been holding for you.\p {PLAYER} got the BAG back.")
}

text BattleFrontier_BattlePyramidLobby_Text_LookForwardToNextChallenge {
    format("We look forward to your next challenge!")
}

text BattleFrontier_BattlePyramidLobby_Text_HereIsPrize {
    format("We have been looking forward to your arrival!\p Here is your prize for conquering the PYRAMID.")
}

text BattleFrontier_BattlePyramidLobby_Text_TellYouWhatMisfortunesAwait {
    format("Welcome…\p I shall be pleased to tell you what misfortunes await in the PYRAMID…")
}

text BattleFrontier_BattlePyramidLobby_Text_Aah {
    format("… … … … … … … … … … … …\p … … … … … … Aah!")
}

text BattleFrontier_BattlePyramidLobby_Text_HintParalysis {
    format("I see a shower of sparks…\p …And in it, I see your POKéMON struggling with paralysis…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintPoison {
    format("I see poison…\p …And, I see your POKéMON suffering from the effects of poison…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintBurn {
    format("I see bright red flames…\p …And, I see your POKéMON suffering from burns…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintPPWaste {
    format("I sense the tremendous pressure of unrequited anger…\p It is a curse…\p …And, I see your POKéMON drained of Power Points and having no recourse\l but to use STRUGGLE…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintLevitate {
    format("I see POKéMON loftily airborne…\p …And, I see your POKéMON frustrated by powerless GROUND-type moves…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintTrapAbility {
    format("I sense terrific energy rising from the ground below…\p …And, I see your POKéMON unable to escape the power's clutches…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintIce {
    format("I see ICE-type POKéMON…\p …And, I see your POKéMON fighting the freezing effects of ice…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintExplosion {
    format("I see a flurry of moves that imperil the user…\p …And, I see your POKéMON falling to them…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintPsychic {
    format("I see PSYCHIC-type POKéMON…\p …And, I see your POKéMON in torment from PSYCHIC moves…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintRock {
    format("I see ROCK-type POKéMON…\p …And, I see your POKéMON suffering from ROCK moves…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintFighting {
    format("I see FIGHTING-type POKéMON…\p …And, I see your POKéMON pummeled by FIGHTING moves…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintWeather {
    format("RAIN DANCE… SUNNY DAY… SANDSTORM… HAIL…\p I see POKéMON that become stronger with the weather…\p …And, I see your POKéMON confounded by different types of moves…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintBug {
    format("I see BUG-type POKéMON…\p …And, I see your POKéMON suffering from different kinds of attacks…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintDark {
    format("I see DARK-type POKéMON…\p …And, I see your POKéMON suffering from DARK-type moves…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintWater {
    format("I see WATER-type POKéMON…\p …And, I see your POKéMON suffering from WATER-type moves…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintGhost {
    format("I see GHOST-type POKéMON…\p …And, I see your POKéMON suffering from GHOST-type moves…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintSteel {
    format("I see STEEL-type POKéMON…\p …And, I see your POKéMON suffering from enormously powerful moves…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintFlyingDragon {
    format("I see flying POKéMON…\p …And, I see your POKéMON suffering from enormously powerful moves…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintStoneEvolve {
    format("I see those that have evolved from the power of stones…\p I also sense fire, water, and electricity…\p …And, I see your POKéMON suffering from those three powers…")
}

text BattleFrontier_BattlePyramidLobby_Text_HintNormal {
    format("I see NORMAL-type POKéMON…\p …And, I see your POKéMON suffering from enormously powerful moves…")
}

text BattleFrontier_BattlePyramidLobby_Text_BelieveMyFortunesOrNot {
    format("Whether you believe my fortunes or not, the choice is yours…\p The future can be changed anytime… I wish you safe passage…")
}

text BattleFrontier_BattlePyramidLobby_Text_TrainersNoticeRunning {
    format("Did you know?\p If you run fast, TRAINERS may notice and come after you for a battle.\p So, if you want to avoid TRAINERS, don't catch their eyes, but sneak\l cautiously and quietly past them.")
}

text BattleFrontier_BattlePyramidLobby_Text_LostLotOfItems {
    format("Awaaaaaaarrrrgh!\p I had a whole lot of items, but I lost them all when I lost!\p Awaaaaaaarrrrgh!")
}

text BattleFrontier_BattlePyramidLobby_Text_YouveDefeatedPyramidKing {
    format("Welcome back! You've done the unthinkable!\p You've defeated the PYRAMID KING and conquered the BATTLE PYRAMID!")
}

text BattleFrontier_BattlePyramidLobby_Text_GiveYouTheseBattlePoints {
    format("Young explorer! In commendation of your courage,\l we give you these Battle Point(s)!")
}

text BattleFrontier_BattlePyramidLobby_Text_RulesAreListed {
    format("The Battle Quest rules are listed.")
}

text BattleFrontier_BattlePyramidLobby_Text_ReadWhichHeading {
    format("Which heading do you want to read?")
}

text BattleFrontier_BattlePyramidLobby_Text_ExplainMonRules {
    format("When the PYRAMID is conquered, the wild POKéMON that appear in it\l are replaced by different kinds.\p Explore, observe, and learn what kinds of wild POKéMON you may encounter.")
}

text BattleFrontier_BattlePyramidLobby_Text_ExplainTrainerRules {
    format("TRAINERS are lying in wait for you inside the PYRAMID.\p On each floor, there are up to eight TRAINERS.\p When you defeat a TRAINER, you will get a helpful hint for your adventure.")
}

text BattleFrontier_BattlePyramidLobby_Text_ExplainMazeRules {
    format("The mazes in the PYRAMID rearrange themselves every time you enter it.\p The mazes are poorly lit. You must advance with caution.\p The light grows brighter whenever you defeat a wild POKéMON or a TRAINER.")
}

text BattleFrontier_BattlePyramidLobby_Text_ExplainBagRules {
    format("The BATTLE BAG serves as your BAG while in the PYRAMID.\p There are two separate BATTLE BAGS-- one each for the Level 50 and\l Open Level adventures.\p They each can hold up to 99 pieces of ten kinds of items.\p The contents of the BATTLE BAG are lost if you fail in your quest.")
}

